{"version":3,"sources":["components/JoinBlock.jsx","reducer.js","components/socket.js","components/Chat.jsx","App.js","index.js"],"names":["JoinBlock","onLogin","React","useState","roomId","setRoomId","userName","setUserName","isLoading","setLoading","onEnter","a","alert","obj","axios","post","className","placeholder","value","onChange","e","target","disabled","onClick","state","action","type","joined","payload","users","messages","socket","io","transports","Chat","onAddMessage","messageValue","setMessageValue","messagesRef","useRef","useEffect","current","scrollTo","style","width","maxWidth","minWidth","height","backgroundColor","padding","overflow","length","map","name","index","listStyle","ref","margin","float","color","paddingRight","borderRadius","marginLeft","text","aria-label","aria-describedby","emit","id","App","useReducer","reducer","dispatch","get","data","setUsers","addMessage","message","on","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e51605c.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nfunction JoinBlock({onLogin}) {\r\n    const [roomId, setRoomId] = React.useState('')\r\n    const [userName, setUserName] = React.useState('')\r\n    const [isLoading, setLoading] = React.useState(false)\r\n\r\n    const onEnter = async () => {\r\n        if(!userName || !roomId){\r\n            return alert('неверные данные')\r\n        }\r\n        const obj = {\r\n            roomId,\r\n            userName\r\n        }\r\n        setLoading(true)\r\n        await axios.post('https://chatroommess.herokuapp.com/rooms', obj)\r\n        onLogin(obj)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='joinBlock'>\r\n                <input className='form-control' placeholder='Room ID' value={roomId} onChange={e => setRoomId(e.target.value)}></input>\r\n                <br />\r\n                <input className='form-control' placeholder='Your Name' value={userName} onChange={e => setUserName(e.target.value)}></input>\r\n                <br />\r\n                <button disabled={isLoading} className='btn btn-success' onClick={onEnter}>\r\n                   {isLoading ? 'ВХОД....' : 'ВОЙТИ'}\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default JoinBlock","export default(state, action) => {\r\n   switch (action.type) {\r\n       case 'JOINED':\r\n           return {\r\n            ...state,\r\n            joined: true,\r\n            roomId: action.payload.roomId,\r\n            userName: action.payload.userName\r\n           }\r\n       case 'SET_USERS':\r\n           return {\r\n            ...state,\r\n            users: action.payload\r\n           }\r\n       case 'SET_DATA':\r\n           return {\r\n            ...state,\r\n            users: action.payload.users,\r\n            messages: action.payload.messages,\r\n            \r\n           }\r\n       case 'NEW_MESSAGE':\r\n           return {\r\n            ...state,\r\n            messages:[...state.messages, action.payload]\r\n           }\r\n           \r\n   \r\n       default:\r\n           return state\r\n           \r\n   }\r\n}","import io from 'socket.io-client'\r\n\r\nconst socket = io('wss://chatroommess.herokuapp.com/', {transports: ['polling']})\r\n\r\n\r\nexport default socket","\r\nimport React from 'react'\r\nimport './Chat.css'\r\nimport socket from './socket'\r\n\r\n\r\n\r\n\r\n\r\nexport default function Chat({users, messages, userName, roomId, onAddMessage}) {\r\n    const [messageValue, setMessageValue] = React.useState('')\r\n    const messagesRef = React.useRef(null)\r\n\r\n    const onSendMessage = () => {\r\n        socket.emit('ROOM:NEW_MESSAGE', {\r\n            userName,\r\n            roomId,\r\n            text: messageValue\r\n        })\r\n        onAddMessage({userName, text: messageValue})\r\n        setMessageValue('')\r\n        \r\n    }\r\n    \r\n    React.useEffect(() => { \r\n            messagesRef.current.scrollTo(0, 99999)\r\n    }, [messages])\r\n\r\n    return (\r\n        <div className='container' style={{width: '100%', maxWidth: '1000px', minWidth: '300px', height: '80%'}}>\r\n            <div className='containerChat'>\r\n\r\n                <div className='row' >\r\n\r\n                    <div className='col-4' style={{backgroundColor: '#F5F5F5', padding: '10px', overflow: 'hidden', }}>\r\n                        Комната: <b>{roomId}</b>\r\n                        <hr/>\r\n                        <h6><div className='badge bg-secondary'>Online({users.length}):</div></h6>\r\n                        <ul>\r\n                           {users.map((name, index)=><li key={index} style={{listStyle: 'none'}}><div className='badge bg-success'>{name}</div></li> ) }\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className='col-8'>\r\n                        <div ref={messagesRef} className='row' style={{height:'600px', overflow: 'auto', margin: '5px'}}>\r\n                            <div>\r\n                                {messages.map((messages, index) => \r\n                                    <div key={index} className='messages' style={{width: '100%'}}>\r\n                                        <div  style={{float: 'right', color: 'white', paddingRight: '10px'}}>\r\n                                            <span>{messages.userName}</span>\r\n                                        </div>\r\n                                        <p className='p-3 mb-2 bg-primary text-white' style={{borderRadius: '10px', width: \"80%\", marginLeft: \"20%\"}}>\r\n                                            {messages.text}\r\n                                        </p>\r\n                                        \r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className='col'>\r\n                        <div className=\"input-group mb-3\">\r\n                            <input value={messageValue} onChange={e=>setMessageValue(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"your message\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\"/>\r\n                            <button onClick={onSendMessage} className=\"btn btn-primary\" type=\"button\" id=\"button-addon2\">SEND</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n                                                            \r\n    )\r\n}\r\n","import React from 'react'\nimport './App.css';\n\nimport JoinBlock from './components/JoinBlock';\nimport reducer from './reducer'\nimport socket from './components/socket'\nimport Chat from './components/Chat';\nimport axios from 'axios'\n\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(reducer, {\n    joined: false,\n    roomId: null,\n    userName: null,\n    users: [],\n    messages: []\n  })\n\n  const onLogin = async (obj) => {\n    dispatch({\n      type: 'JOINED',\n      payload: obj\n    })\n    socket.emit('ROOM:JOIN', obj)\n    const {data} = await axios.get(`https://chatroommess.herokuapp.com/rooms/${obj.roomId}`)\n    \n    dispatch({\n      type: 'SET_DATA',\n      payload: data\n    })\n  }\n  \n  const setUsers = (users) => {\n    dispatch({\n      type: 'SET_USERS',\n      payload: users\n    })\n  }\n\n  const addMessage = (message) => {\n    \n    dispatch({\n      type: 'NEW_MESSAGE',\n      payload: message\n    })\n  }\n\n  React.useEffect(() => {\n    \n    socket.on('ROOM:SET_USERS', setUsers)\n    socket.on('ROOM:NEW_MESSAGE', addMessage)\n   \n  },[])\n\n  return (\n    <div className=\"wrapper\">\n     {!state.joined ? <JoinBlock onLogin={onLogin}/> : <Chat {...state} onAddMessage={addMessage}/>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}